#include <iostream>

using namespace std;

int F(int a, int b, int c, int deep);

int main()
{
    int a;
    int b;
    int c;
    cin >> a;
    cin >> b;
    cin >> c;
    int deep = 0; // additional info
    int calc = 1; // exception

    if (a > 20 || b > 20 || c > 20)
    {
       cout << 1024*1024 << endl; // 2^20
       exit(1);
    }
    else if (a == b && a == c)
    {
        calc = pow(2, a);
        cout << calc << endl;
        exit(1);
    }

    cout << F(a, b, c, deep) << endl;

}

int F(int a, int b, int c, int deep) 
{
    deep = deep + 1;
    if (a <= 0 || b <= 0 || c <= 0)
    {
        return 1;
    }
    else if (a < b && b < c )
    {
      return 2 * F(a - 1, b - 1, c - 1, deep); // = F(a, b, c-1) + F(a, b-1, c-1) - F(a, b-1, c);
    }  
    else
    {
      return F(a - 1, b, c, deep) + F(a - 1, b - 1, c, deep) + F(a - 1, b, c - 1, deep) - F(a - 1, b - 1, c - 1, deep)
    }          
}
   
   
//dependences
// 
//  F(a - 1, b, c, deep) + F(a - 1, b - 1, c, deep) + F(a - 1, b, c - 1, deep) - F(a - 1, b - 1, c - 1, deep)]
//
//  2*F(a - 1, b - 1, c - 1, deep) - (F(a, b, c - 1, deep) + F(a, b - 1, c - 1, deep) - F(a, b - 1, c, deep)) = 0
//   
// 
// return F(a, b, c - 1, deep) + F(a, b - 1, c - 1, deep) - F(a, b - 1, c, deep) #1 else if
// return F(a - 1, b, c, deep) + F(a - 1, b - 1, c, deep) + F(a - 1, b, c - 1, deep) - F(a - 1, b - 1, c - 1, deep) #2 else

// (1 1 2) + (1 1 2) - (1 1 3) => (0 0 3) + (0 1 2) + (0 1 2) - (0 0 2) + (0 2 2) + (0 1 2) + (0 2 1) - (0 1 1) + (0 0 1) - (0 1 2) - (0 0 2) - (0 1 1) = 7*1 - 5*1 = 2    
    
    
    
    
